---
name: Tests

on:
  push:
    branches: [ "main", "master", "test" ]
  pull_request:
    branches: [ "main", "master", "test" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: intdata_test
          POSTGRES_PASSWORD: intdata_test
          POSTGRES_DB: intdatadb_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U intdata_test" --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      TEST_DATABASE_URL: postgresql://intdata_test:intdata_test@localhost:5432/intdatadb_test
      TEST_DB_HOST: localhost
      TEST_DB_PORT: "5432"
      TEST_DB_USER: intdata_test
      TEST_DB_PASSWORD: intdata_test
      TEST_DB_NAME: intdatadb_test
      PGUSER: intdata_test
      PGPASSWORD: intdata_test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install system deps (ripgrep, libpq)
        run: |
          sudo apt-get update
          sudo apt-get install -y ripgrep libpq-dev

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check DB schema up-to-date
        run: python -m core.db.schema_export check

      - name: Run web & diagnostics tests
        timeout-minutes: 20
        env:
          TG_BOT_TOKEN: "testtoken"
          TG_BOT_USERNAME: "testbot"
        run: |
          set -e
          pytest tests/web tests/test_diagnostics_service.py -q | tee pytest-part1.log

      - name: Run remaining tests
        timeout-minutes: 30
        env:
          TG_BOT_TOKEN: "testtoken"
          TG_BOT_USERNAME: "testbot"
        run: |
          set -e
          pytest -q --ignore=tests/web --ignore=tests/test_diagnostics_service.py --maxfail=1 | tee pytest-part2.log

      - name: Upload pytest logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-logs
          path: |
            pytest-part1.log
            pytest-part2.log
